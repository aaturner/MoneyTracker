@model MoneyTracker.Models.ChangeEvents.AllocationChange

@{
    ViewBag.Title = "Edit";
}

<h2>Allocation Change</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AllocationChange</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EffectiveDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EffectiveDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChangeTypeEnum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ChangeTypeEnum, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ChangeTypeEnum, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AllocationId, "AllocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AllocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AllocationId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.IsRecurring, "IsRecurring", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>
                    <p>@Html.RadioButtonFor(x => x.IsRecurring, "True") True</p>
                    @Html.RadioButtonFor(x => x.IsRecurring, "False") False
                </span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@*@section Scripts {   
   
    @Scripts.Render("~/bundles/jqueryui")   
    @Styles.Render("~/Content/cssjqryUi")   
   
    <script type="text/javascript">   
        $(document).ready(function () {   
            $('input[type=datetime]').datepicker({   
                dateFormat: "dd/M/yy",   
                changeMonth: true,   
                changeYear: true,   
                yearRange: "-60:+0"   
            });   
   
        });   
    </script>   
   
}*@  