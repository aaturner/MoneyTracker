@model TransactionsUpload
@using System.Data
@using System.Web.Mvc.Html
@using MoneyTracker.AppModels
@using MoneyTracker.Models.Allocations

@{
    ViewBag.Title = "Upload";
    string style = string.Empty;
    var grid = new WebGrid(Model.TransactionTempsCollection, canPage: true, rowsPerPage: 15, selectionFieldName: "selectedRow",
        ajaxUpdateContainerId: "gridContent");
    grid.Pager(WebGridPagerModes.NextPrevious);
}

<h2>Upload</h2>
<p>Columns Expected: Transaction Date, Description, Amount</p>


@using (Html.BeginForm("Upload", "TransactionsUpload", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="form-group">
        <input type="file" id="dataFile" name="upload"/>
    </div>
   @* @Html.Label("AccountName:") @Html.DropDownListFor(m => m.AccountName, Model.Accounts)*@
   @* @Html.DropDownList("Accounts", null, htmlAttributes: new { @class = "form-control" })*@
    @Html.DropDownListFor(model => model.AccountId, Model.AccountItems)
    @Html.ValidationMessageFor(model => model.AccountId, "", new {@class = "text-danger"})
    <div class="form-group">
        <input type="submit" value="Upload" class="btn btn-sm"/>
    </div>

}

    @*<div id="gridContent">
        @grid.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: grid.Columns(
                grid.Column("Select", header: null, format: @<text>@item.GetSelectLink("Select")</text>),
                grid.Column("DisplayTransactionDate", "Date2"),
                grid.Column("Description", " Description", style: "description"),
                grid.Column("Amount", "Amount"),
                grid.Column(
                    header:"Allocation",
                    format: (item) => @Html.DropDownList("AllocationId", Model.AllocationListItems.Select(u => new SelectListItem
                    {
                        Text = u.Text,
                        Value = u.Value,
                        //Selected = u.Value==((WebGridRow)item)["AllocationId"].ToString()
                    })))
                    )
                )
    </div>

    if (grid.HasSelection)
    {
        var value = grid.Rows[grid.SelectedIndex].Cast<PreTransaction>();
        var trans = (MoneyTracker.AppModels.PreTransaction) grid.Rows[grid.SelectedIndex].Value;
        Html.Partial("~/Views/TransactionsUpload/_Transaction.cshtml", trans);
    }
}

<style type="text/css">
    .webGrid {
        margin: 4px;
        border-collapse: collapse;
        width: 500px;
        background-color: #2e3338;
    }

    .header {
        background-color: #2d3a4f; /*#2e2228;*/
        font-weight: bold;
        color: #7a8288;
    }

    .webGrid th, .webGrid td {
        border: 1px solid #1c1e22;
        padding: 0px;
        padding-right: 5px;
    }

    .alt {
        background-color: #2e3338; /*#1c1e22    7a8288;*/
    }

    .gridHead a:hover {
        text-decoration: underline;
    }

    .description {
        width: auto
    }
    .hovercs {
        background-color: #1c1e22;
        cursor: pointer;
    }
    .clickable {
        cursor: pointer;
        background-color: #304a75;
    }
</style> 

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script type="text/javascript">
    $(function(){
        //find the web Grid
        $('tbody tr').hover( function(){
            $(this).toggleClass('hovercs');  //hover change highlight style
        }).on('click', function () {
            $('tbody tr').not($(this)).removeClass('clickable');  //remove other row click highlight style
            $(this).addClass('clickable');  // add style to current row
        });
    });
</script>*@   

@*//table
    if (Model != null && Model.DataTable != null)
    {
        <table class="table-bordered">
            <thead>
            <tr>
                @foreach (DataColumn col in Model.DataTable.Columns)
                {
                    <th>@col.ColumnName</th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (DataRow row in Model.DataTable.Rows)
            {
                <tr>
                    @foreach (DataColumn col in Model.DataTable.Columns)
                    {
                        style = (col.ColumnName.Contains("Amount")) ? "text-align: right; padding-left: 15px" : "padding-right: 15px";
                        <td style ="@style">@row[col.ColumnName]</td>
                    }
                </tr>
            }
            </tbody>
        </table>
        <h3>Editable Transactions</h3>
        @*foreach(var transactionsUpload in Model.PreTransactions)
        {
            @Html.Partial("~/Views/Transactions/_Transaction.cshtml",transactionsUpload)
    }*@
