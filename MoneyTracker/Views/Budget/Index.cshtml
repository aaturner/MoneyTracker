@{
    ViewBag.Title = "Index";
    string test = "initial";
    string style = string.Empty;
    //TableRowSimple first = Model.ElementAtOrDefault<TableRowSimple>(3);
    try
    {
        //if (Model.Equals(null))
        test = Model.BudgetRows.Count().ToString();
        //first = Model.First<TableRowSimple>();
    }
    catch
    { test = "net yet"; }
}
@using MoneyTracker.AppModels
@using MoneyTracker.Utilities
@model MoneyTracker.AppModels.BudgetCenter

<h2>Budget</h2>
@*TODO: Add buttons to the table to add items to a category or edit existing items.  Might want to be able to edit in place*@
<p>
    @using (Html.BeginForm())
    {
        @Html.DropDownListFor(model => model.SelectedMonth, (IEnumerable<SelectListItem>)ViewBag.Months, "Month")
        <input type="submit" value="submit" class="btn-primary btn-xs"/>
        @Html.DropDownListFor(model => model.SelectedYear, (IEnumerable<SelectListItem>)ViewBag.Years, "Year")
        <input type="submit" value="submit" class="btn-primary btn-xs" />
    }
</p>

@*<div class="form-group">
    @Html.LabelFor(model => model.SelectedPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.SelectedPeriod, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SelectedPeriod, "", new { @class = "text-danger" })
    </div>
</div>*@

<div class="container">
    <h2></h2>
    <p></p>
    <table class="table-bordered">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th>Item</th>
                <th style="text-align:right">Budget</th>
                <th style="text-align:right">Actual</th>
                <th style="text-align:right">Residual</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BudgetRows)
            {
                switch (item.RowType)
                {
                    case Enums.TableRowType.header1:
                        style = "background-color:#2d2d2d";
                        break;
                    case Enums.TableRowType.total:
                        style = "background-color:#1d1d1d";
                        break;
                    default:
                        style = string.Empty;
                        break;
                }
                <tr style="@style">
                <td>
                    @Html.DisplayFor(modelItem => item.Column1) 
                </td>
                    @{switch (item.RowType)

                        {
                            case Enums.TableRowType.expense:
                                <td style="text-align: right">
                                    <button type="submit" class="btn btn-primary btn-xs" onclick="location.href='@Url.Action("Edit", "Expenses", new { id = item.AllocationId })'">
                                        <span style ="background-size: 70%"class="glyphicon glyphicon-edit glyphicon-align-right"></span>
                                    </button>
                                </td>
                                break;
                            case Enums.TableRowType.income:
                                <td style="text-align: right">
                                    <button type="submit" class="btn btn-primary btn-xs" onclick="location.href='@Url.Action("Edit", "Incomes", new { id = item.AllocationId })'">
                                        <span class="glyphicon glyphicon-edit"></span>
                                    </button>
                                </td>
                                break;
                            case Enums.TableRowType.header2:
                                <td style ="alignment: right">
                                    @Html.DisplayFor(modelItem => item.Column2)
                                </td>
                                break;

                            default:
                                <td style="alignment: right">
                                    @Html.DisplayFor(modelItem => item.Column2)
                                </td>
                                break;
                        }
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Column3)
                    </td>
                    <td style="text-align: right; width:100px">
                        @Html.DisplayFor(modelItem => item.MoneyCol1)
                    </td>
                    <td style="text-align: right; width:100px">
                        @Html.DisplayFor(modelItem => item.MoneyCol2)
                    </td>
                    <td style="text-align: right; width:100px">
                        @Html.DisplayFor(modelItem => item.MoneyCol3)
                    </td>
                </tr>
            }

        </tbody>

    </table>
</div>

<p>Selected month = @Model.SelectedMonth</p>

<h3>Adjust budget items</h3>
<div class="btn-group-sm">
    <a href="@Url.Action("Index", "ExpenseCategories")" class="btn btn-primary btn-lg">Expense Categories&raquo;</a>
    <a href="@Url.Action("Index", "Expenses")" class="btn btn-primary btn-lg">Expenses&raquo;</a>
    <a href="@Url.Action("Index", "IncomeSources")" class="btn btn-primary btn-lg">Income Source &raquo;</a>
    <a href="@Url.Action("Index", "Incomes")" class="btn btn-primary btn-lg">Income &raquo;</a>
    <a href="@Url.Action("Index", "SavingsInvestments")" class="btn btn-primary btn-lg">SaveInvest &raquo;</a>
    <a href="@Url.Action("Index", "Loans")" class="btn btn-primary btn-lg">Loans &raquo;</a>
    <a href="@Url.Action("Index", "SystemSettings")" class="btn btn-primary btn-lg">Sys &raquo;</a>
</div>
